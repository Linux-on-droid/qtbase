Description: QLineEdit: Fix cursor drawing issues
 Entering Chinese in some fonts in an English environment causes
 the cursor drawing coordinates to exceed the updated coordinates,
 leaving behind stale pixels at the top.
 .
 Keep the refresh and draw area calculation methods the same when
 rendering the contents in QLineEdit::paintEvent, and when
 calculating the update area in
 QLineEditPrivate::adjustedControlRect.
Origin: upstream, https://codereview.qt-project.org/c/qt/qtbase/+/308158
Last-Update: 2020-07-23

--- a/src/widgets/widgets/qlineedit.cpp
+++ b/src/widgets/widgets/qlineedit.cpp
@@ -2031,6 +2031,7 @@
     }
 
     // the y offset is there to keep the baseline constant in case we have script changes in the text.
+    // Needs to be kept in sync with QLineEditPrivate::adjustedControlRect
     QPoint topLeft = lineRect.topLeft() - QPoint(d->hscroll, d->control->ascent() - fm.ascent());
 
     // draw text, selections and cursors
diff --git a/src/widgets/widgets/qlineedit_p.cpp b/src/widgets/widgets/qlineedit_p.cpp
index 6424c14..05b14b1 100644
--- a/src/widgets/widgets/qlineedit_p.cpp
+++ b/src/widgets/widgets/qlineedit_p.cpp
@@ -70,12 +70,13 @@
 const int QLineEditPrivate::verticalMargin(1);
 const int QLineEditPrivate::horizontalMargin(2);
 
+// Needs to be kept in sync with QLineEdit::paintEvent
 QRect QLineEditPrivate::adjustedControlRect(const QRect &rect) const
 {
     QRect widgetRect = !rect.isEmpty() ? rect : q_func()->rect();
     QRect cr = adjustedContentsRect();
     int cix = cr.x() - hscroll + horizontalMargin;
-    return widgetRect.translated(QPoint(cix, vscroll));
+    return widgetRect.translated(QPoint(cix, vscroll - control->ascent() + q_func()->fontMetrics().ascent()));
 }
 
 int QLineEditPrivate::xToPos(int x, QTextLine::CursorPosition betweenOrOn) const
