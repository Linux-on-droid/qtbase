Description: emit QScreen::geometryChanged when the logical DPI changes
 Add the missing call to QScreenPrivate::emitGeometryChangeSignals()
 along with an emission of physicalDotsPerInchChanged()
 since that is calculated from geometry and physical size.
 .
 Rearrange the code in
 QGuiApplicationPrivate::processScreenGeometryChange()
 to prevent duplicate emissions of geometryChanged(),
 physicalDotsPerInchChanged() which this change would introduce.
Origin: upstream, https://code.qt.io/cgit/qt/qtbase.git/commit/?id=5c7307775d32ae0a
Last-Update: 2020-09-30

--- a/src/gui/kernel/qguiapplication.cpp
+++ b/src/gui/kernel/qguiapplication.cpp
@@ -3162,13 +3162,14 @@ void QGuiApplicationPrivate::processScre
     bool availableGeometryChanged = e->availableGeometry != s->d_func()->availableGeometry;
     s->d_func()->availableGeometry = e->availableGeometry;
 
-    if (geometryChanged) {
-        Qt::ScreenOrientation primaryOrientation = s->primaryOrientation();
+    const Qt::ScreenOrientation primaryOrientation = s->primaryOrientation();
+    if (geometryChanged)
         s->d_func()->updatePrimaryOrientation();
 
-        emit s->geometryChanged(s->geometry());
+    s->d_func()->emitGeometryChangeSignals(geometryChanged, availableGeometryChanged);
+
+    if (geometryChanged) {
         emit s->physicalSizeChanged(s->physicalSize());
-        emit s->physicalDotsPerInchChanged(s->physicalDotsPerInch());
         emit s->logicalDotsPerInchChanged(s->logicalDotsPerInch());
 
         if (s->primaryOrientation() != primaryOrientation)
@@ -3178,8 +3179,6 @@ void QGuiApplicationPrivate::processScre
             updateFilteredScreenOrientation(s);
     }
 
-    s->d_func()->emitGeometryChangeSignals(geometryChanged, availableGeometryChanged);
-
     resetCachedDevicePixelRatio();
 }
 
--- a/src/gui/kernel/qscreen.cpp
+++ b/src/gui/kernel/qscreen.cpp
@@ -88,6 +88,9 @@ void QScreenPrivate::updateGeometriesWit
 void QScreenPrivate::emitGeometryChangeSignals(bool geometryChanged, bool availableGeometryChanged)
 {
     Q_Q(QScreen);
+    if (geometryChanged)
+        emit q->geometryChanged(geometry);
+
     if (availableGeometryChanged)
         emit q->availableGeometryChanged(availableGeometry);
 
@@ -96,6 +99,9 @@ void QScreenPrivate::emitGeometryChangeS
         for (QScreen* sibling : siblings)
             emit sibling->virtualGeometryChanged(sibling->virtualGeometry());
     }
+
+    if (geometryChanged)
+        emit q->physicalDotsPerInchChanged(q->physicalDotsPerInch());
 }
 
 void QScreenPrivate::setPlatformScreen(QPlatformScreen *screen)
